name: backendCd.yml

on:
  push:
    branches:
      - "main"

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Lowercase repo
        id: repo
        run: echo "repo=${GITHUB_REPOSITORY,,}" >> "$GITHUB_OUTPUT"

      - name: Set up Buildx
        id: bx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          install: true

      - name: Show buildx builders
        run: docker buildx ls

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Build (Maven)
        run: mvn -B -DskipTests package

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get short SHA
        id: meta
        run: echo "sha_tag=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.bx.outputs.name }}
          context: .
          push: true
          tags: |
            ghcr.io/${{ steps.repo.outputs.repo }}:latest
            ghcr.io/${{ steps.repo.outputs.repo }}:${{ steps.meta.outputs.sha_tag }}
          cache-from: type=registry,ref=ghcr.io/${{ steps.repo.outputs.repo }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ steps.repo.outputs.repo }}:buildcache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    environment: production

    steps:
      - uses: actions/checkout@v4

      - name: Copy compose to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "docker-compose.yml"
          target: ${{ secrets.APP_DIR }}
          overwrite: true
          strip_components: 0

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: |
            set -e
            cd "${{ secrets.APP_DIR }}"

            echo "$GITHUB_TOKEN" | docker login ghcr.io -u "$GITHUB_ACTOR" --password-stdin || true

            if [ -f docker-compose.prod.yml ]; then
              export COMPOSE_FILE=docker-compose.yml:docker-compose.prod.yml
            else
              export COMPOSE_FILE=docker-compose.yml
            fi

            docker compose pull
            docker compose up -d
            docker image prune -f